#include <18F4550.h>
#device ADC=8

#FUSES NOWDT                    //No Watch Dog Timer
#FUSES WDT128                   //Watch Dog Timer uses 1:128 Postscale
#FUSES NOBROWNOUT               //No brownout reset
#FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O
#FUSES NOXINST                  //Extended set extension and Indexed Addressing mode disabled (Legacy mode)

#use delay(crystal=20000000)

#BYTE LATD  = 0xF8C
#BIT  RBPU  = 0xFF1.7     // pull-up all port b

int8 cnt_tmr0 = 0, type = 0;
int8 Color1 = 0, Color2 = 0, Color3 = 0;
#INT_EXT
void EXT_isr(void){
    delay_ms(20);
    type = type > 2? 0 : type + 1;
}
#INT_TIMER0
void  TIMER0_isr(void) {
    if(!(++cnt_tmr0)){
        if(Color1 > 0)  bit_set(LATD,0);
        if(Color2 > 0)  bit_set(LATD,1);
        if(Color3 > 0)  bit_set(LATD,2);
      cnt_tmr0++;
    }
    if(cnt_tmr0 == Color1)  bit_clear(LATD,0);
    if(cnt_tmr0 == Color2)  bit_clear(LATD,1);
    if(cnt_tmr0 == Color3)  bit_clear(LATD,2);//*/
    /*for(j=0; j<3; j++){
      if(cnt_tmr0 == ptrColors[j])  bit_clear(LATD,j);
    }*/
    set_timer0(200);
}

void main(){
   RBPU = 0;  // pull-up todo el puerto b
   set_tris_a(0xFF);
   set_tris_d(0xF0);
   set_tris_b(0xFF);

   setup_adc(ADC_CLOCK_DIV_32 | ADC_TAD_MUL_8 | VSS_VDD );  // adc clock interno dividido en 64, 8 tda
   set_adc_channel(0);

   setup_adc_ports(AN0_TO_AN2);
   setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1|RTCC_8_bit);      //51.2 us overflow
   enable_interrupts(INT_TIMER0);
   enable_interrupts(INT_EXT_H2L);
   enable_interrupts(GLOBAL);
   int i;
   while(TRUE){
     /*i = 0;
     set_adc_channel(i++);
     delay_us(50);
     Color1 = (int8) read_adc();
     set_adc_channel(i++);
     delay_us(50);
     Color2 = (int8) read_adc();
     set_adc_channel(i);
     delay_us(50);
     Color3 = (int8) read_adc();*/
     i = (int8) read_adc();
     switch(type){
       case 1: Color1 = i ;  break;
       case 2: Color2 = i ;  break;
       case 3: Color3 = i ;  break;
     }
   }

}
