CCS PCM C Compiler, Version 4.130, 59972               26-sep.-15 23:04

               Filename: C:\Users\ivan-\Documents\MEGA\Microcontroladores\PIC\Pic C\16f677\vumetro matriz 2_0\vumetro 2_0.lst

               ROM used: 706 words (34%)
                         Largest free fragment is 1342
               RAM used: 8 (6%) at main() level
                         21 (16%) worst case
               Stack:    2 locations

*
0000:  MOVLW  02
0001:  MOVWF  0A
0002:  GOTO   240
0003:  NOP
.................... #include <16f677.h> 
.................... //////// Standard Header file for the PIC16F677 device //////////////// 
.................... #device PIC16F677 
.................... #list 
....................  
.................... #device adc=16 
....................  
.................... #FUSES NOWDT,INTRC_IO,NOMCLR,NOBROWNOUT,NOPUT,NOPROTECT,NOCPD,IESO,FCMEN 
.................... #use delay(clock=8M) 
014E:  MOVLW  33
014F:  MOVWF  04
0150:  MOVF   00,W
0151:  BTFSC  03.2
0152:  GOTO   160
0153:  MOVLW  02
0154:  MOVWF  21
0155:  CLRF   20
0156:  DECFSZ 20,F
0157:  GOTO   156
0158:  DECFSZ 21,F
0159:  GOTO   155
015A:  MOVLW  97
015B:  MOVWF  20
015C:  DECFSZ 20,F
015D:  GOTO   15C
015E:  DECFSZ 00,F
015F:  GOTO   153
0160:  RETURN
0161:  MOVLW  08
0162:  SUBWF  34,F
0163:  BTFSS  03.0
0164:  GOTO   170
0165:  MOVLW  34
0166:  MOVWF  04
0167:  BCF    03.0
0168:  RRF    00,F
0169:  MOVF   00,W
016A:  BTFSC  03.2
016B:  GOTO   170
016C:  GOTO   16E
016D:  NOP
016E:  DECFSZ 00,F
016F:  GOTO   16D
0170:  RETURN
....................  
.................... #BYTE TRISA=0x85 
.................... #BYTE TRISB=0x86 
.................... #BYTE TRISC=0x87 
.................... #BYTE PORTA=0x05 
.................... #BYTE PORTB=0x06 
.................... #BYTE PORTC=0x07 
.................... #bit cl=PORTB.6 
.................... #bit data=PORTB.7 
.................... //Prototipos de funciones 
.................... void anuncio(int letrero); 
.................... int comprobar_adc(long analog); 
.................... //Programa pricipal 
.................... void main() 
.................... { 
*
0240:  CLRF   04
0241:  MOVLW  1F
0242:  ANDWF  03,F
0243:  MOVLW  71
0244:  BSF    03.5
0245:  MOVWF  0F
0246:  MOVF   0F,W
0247:  BCF    03.5
0248:  BSF    03.6
0249:  BCF    1F.0
024A:  BCF    1F.1
024B:  BCF    1F.2
024C:  BCF    1F.3
024D:  BCF    03.6
024E:  BCF    1F.6
024F:  MOVLW  00
0250:  BSF    03.6
0251:  MOVWF  1E
0252:  CLRF   19
0253:  CLRF   1A
0254:  BSF    03.5
0255:  CLRF   1E
0256:  BCF    03.5
0257:  CLRF   1B
0258:  BCF    03.6
0259:  BCF    0D.5
....................    setup_oscillator(OSC_8MHZ); 
025A:  MOVLW  71
025B:  BSF    03.5
025C:  MOVWF  0F
025D:  MOVF   0F,W
....................    setup_adc_ports(sAN2 | VSS_VREF); 
025E:  BCF    03.5
025F:  BSF    03.6
0260:  BCF    1F.0
0261:  BCF    1F.1
0262:  BCF    1F.2
0263:  BCF    1F.3
0264:  BCF    03.6
0265:  BSF    1F.6
0266:  MOVLW  04
0267:  BSF    03.6
0268:  MOVWF  1E
....................    setup_adc(ADC_CLOCK_INTERNAL); 
0269:  BSF    03.5
026A:  BCF    03.6
026B:  BSF    1F.4
026C:  BSF    1F.5
026D:  BCF    1F.6
026E:  BCF    03.5
026F:  BCF    1F.7
0270:  BSF    1F.0
....................    set_adc_channel(2); 
0271:  MOVLW  08
0272:  MOVWF  21
0273:  MOVF   1F,W
0274:  ANDLW  C3
0275:  IORWF  21,W
0276:  MOVWF  1F
....................    delay_us(15); 
0277:  MOVLW  09
0278:  MOVWF  20
0279:  DECFSZ 20,F
027A:  GOTO   279
027B:  GOTO   27C
....................    Trisc=0; 
027C:  BSF    03.5
027D:  CLRF   07
....................    Portc=0; 
027E:  BCF    03.5
027F:  CLRF   07
....................    Trisb=0b00110000; 
0280:  MOVLW  30
0281:  BSF    03.5
0282:  MOVWF  06
....................    Portb=0; 
0283:  BCF    03.5
0284:  CLRF   06
....................    Trisa=255;  
0285:  MOVLW  FF
0286:  BSF    03.5
0287:  MOVWF  05
....................    anuncio(1); 
0288:  MOVLW  01
0289:  BCF    03.5
028A:  MOVWF  28
028B:  CALL   171
....................    anuncio(2); 
028C:  MOVLW  02
028D:  MOVWF  28
028E:  CALL   171
....................    for(int i=0;i<8;++i) 
028F:  CLRF   26
0290:  MOVF   26,W
0291:  SUBLW  07
0292:  BTFSS  03.0
0293:  GOTO   298
....................    {cl=1;cl=0;} 
0294:  BSF    06.6
0295:  BCF    06.6
0296:  INCF   26,F
0297:  GOTO   290
....................    while(true) 
....................    { 
....................       data=1;cl=1;data=0;cl=0; 
0298:  BSF    06.7
0299:  BSF    06.6
029A:  BCF    06.7
029B:  BCF    06.6
....................       for(int j=0;j<8;++j) 
029C:  CLRF   27
029D:  MOVF   27,W
029E:  SUBLW  07
029F:  BTFSS  03.0
02A0:  GOTO   2C0
....................       { 
....................          Portc=comprobar_adc(read_adc()); 
02A1:  BSF    1F.1
02A2:  BTFSC  1F.1
02A3:  GOTO   2A2
02A4:  MOVF   1E,W
02A5:  MOVWF  23
02A6:  BSF    03.5
02A7:  MOVF   1E,W
02A8:  BCF    03.5
02A9:  MOVWF  28
02AA:  MOVF   1E,W
02AB:  MOVWF  29
02AC:  MOVWF  2B
02AD:  MOVF   28,W
02AE:  MOVWF  2A
02AF:  GOTO   1D6
02B0:  MOVF   21,W
02B1:  MOVWF  07
....................          delay_us(1300); 
02B2:  MOVLW  01
02B3:  MOVWF  33
02B4:  CALL   14E
02B5:  MOVLW  02
02B6:  MOVWF  28
02B7:  MOVLW  94
02B8:  MOVWF  34
02B9:  CALL   161
02BA:  DECFSZ 28,F
02BB:  GOTO   2B7
....................          cl=1;cl=0; 
02BC:  BSF    06.6
02BD:  BCF    06.6
....................       }   
02BE:  INCF   27,F
02BF:  GOTO   29D
....................    } 
02C0:  GOTO   298
.................... } 
.................... void anuncio(int letrero) 
.................... { 
02C1:  SLEEP
....................    const int letras[]={ 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /*C*/ 126   ,  255   ,  195   ,  195   ,  195   ,  195   ,  231   ,  102   ,  0  , 
....................    /*E*/   255   ,   255   ,   219   ,   219   ,   219   ,   219   ,   195   ,   195   ,   0   , 
....................    /*C*/ 126   ,  255   ,  195   ,  195   ,  195   ,  195   ,  231   ,  102   ,  0  , 
....................    /*Y*/ 224   ,  112   ,  48 ,  63 ,  63 ,  48 ,  112   ,  224   ,  0  , 
....................    /*T*/ 192   ,  192   ,  192   ,  255   ,  255   ,  192   ,  192   ,  192   ,  0  , 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /*3*/ 0  ,  66 ,  219   ,  219   ,  219   ,  219   ,  255   ,  102   ,  0  , 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /*I*/ 195   ,  195   ,  195   ,  255   ,  255   ,  195   ,  195   ,  195   ,  0  , 
....................    /*P*/   255   ,   255   ,   204   ,   204   ,   204   ,   204   ,   252   ,   120   ,   0   , 
....................    /*N*/ 255   ,  255   ,  96 ,  48 ,  24 ,  12 ,  255   ,  255   ,  0  , 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /*S*/   114   ,   251   ,   219   ,   219   ,   219   ,   219   ,   223   ,   78   ,   0   , 
....................    /*C*/ 126   ,  255   ,  195   ,  195   ,  195   ,  195   ,  231   ,  102   ,  0  , 
....................    /*E*/   255   ,   255   ,   219   ,   219   ,   219   ,   219   ,   195   ,   195   ,   0   , 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /*6*/   126   ,   255   ,   219   ,   219   ,   219   ,   219   ,   219   ,   78   ,   0   , 
....................    /*I*/ 195   ,  195   ,  195   ,  255   ,  255   ,  195   ,  195   ,  195   ,  0  , 
....................    /*M*/ 255   ,  255   ,  96 ,  56 ,  56 ,  96 ,  255   ,  255   ,  0  , 
....................    /*3*/ 0  ,  66 ,  219   ,  219   ,  219   ,  219   ,  255   ,  102   ,  0  , 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /*I*/ 195   ,  195   ,  195   ,  255   ,  255   ,  195   ,  195   ,  195   ,  0  , 
....................    /*V*/ 252   ,  254   ,  3  ,  3  ,  3  ,  3  ,  254   ,  252   ,  0  , 
....................    /*A*/   127   ,   255   ,   204   ,   204   ,   204   ,   204   ,   255   ,   127   ,   0   , 
....................    /*N*/ 255   ,  255   ,  96 ,  48 ,  24 ,  12 ,  255   ,  255   ,  0  , 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /*M*/ 255   ,  255   ,  96 ,  56 ,  56 ,  96 ,  255   ,  255   ,  0  , 
....................    /*O*/ 126   ,  255   ,  195   ,  195   ,  195   ,  195   ,  255   ,  126   ,  0  , 
....................    /*R*/   255   ,   255   ,   216   ,   220   ,   222   ,   219   ,   249   ,   112   ,   0   , 
....................    /*E*/   255   ,   255   ,   219   ,   219   ,   219   ,   219   ,   195   ,   195   ,   0   , 
....................    /*N*/ 255   ,  255   ,  96 ,  48 ,  24 ,  12 ,  255   ,  255   ,  0  , 
....................    /*O*/ 126   ,  255   ,  195   ,  195   ,  195   ,  195   ,  255   ,  126   ,  0  ,    
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    //Mensaje 1 de 0 a 266 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /*M*/ 255   ,  255   ,  96 ,  56 ,  56 ,  96 ,  255   ,  255   ,  0  , 
....................    /*O*/ 126   ,  255   ,  195   ,  195   ,  195   ,  195   ,  255   ,  126   ,  0  , 
....................    /*D*/ 255   ,  255   ,  129   ,  129   ,  129   ,  129   ,  255   ,  126   ,  0  , 
....................    /*O*/ 126   ,  255   ,  195   ,  195   ,  195   ,  195   ,  255   ,  126   ,  0  , 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /*1*/ 3  ,  51 ,  99 ,  255   ,  127   ,  3  ,  3  ,  3  ,  0  , 
....................    //Mensaje 2 de 267 a 321 
....................    };    
....................    long inicio,fin,fin_msj; 
....................    if(letrero==1) 
*
0171:  DECFSZ 28,W
0172:  GOTO   17A
....................    {inicio=0;fin_msj=266;} 
0173:  CLRF   2A
0174:  CLRF   29
0175:  MOVLW  01
0176:  MOVWF  2E
0177:  MOVLW  0A
0178:  MOVWF  2D
....................    else if(letrero==2) 
0179:  GOTO   186
017A:  MOVF   28,W
017B:  SUBLW  02
017C:  BTFSS  03.2
017D:  GOTO   186
....................    {inicio=267;fin_msj=321;} 
017E:  MOVLW  01
017F:  MOVWF  2A
0180:  MOVLW  0B
0181:  MOVWF  29
0182:  MOVLW  01
0183:  MOVWF  2E
0184:  MOVLW  41
0185:  MOVWF  2D
....................    fin=inicio+8; 
0186:  MOVLW  08
0187:  ADDWF  29,W
0188:  MOVWF  2B
0189:  MOVF   2A,W
018A:  MOVWF  2C
018B:  BTFSC  03.0
018C:  INCF   2C,F
....................    for(int i=0;i<8;++i) 
018D:  CLRF   2F
018E:  MOVF   2F,W
018F:  SUBLW  07
0190:  BTFSS  03.0
0191:  GOTO   196
....................    {cl=1;cl=0;} 
0192:  BSF    06.6
0193:  BCF    06.6
0194:  INCF   2F,F
0195:  GOTO   18E
....................    do 
....................    { 
....................       for (int j = 0; j < 8; ++j) 
0196:  CLRF   30
0197:  MOVF   30,W
0198:  SUBLW  07
0199:  BTFSS  03.0
019A:  GOTO   1C5
....................       { 
....................          data=1;cl=1;data=0;cl=0; 
019B:  BSF    06.7
019C:  BSF    06.6
019D:  BCF    06.7
019E:  BCF    06.6
....................          for (long i = inicio; i < fin; ++i) 
019F:  MOVF   2A,W
01A0:  MOVWF  32
01A1:  MOVF   29,W
01A2:  MOVWF  31
01A3:  MOVF   32,W
01A4:  SUBWF  2C,W
01A5:  BTFSS  03.0
01A6:  GOTO   1C3
01A7:  BTFSS  03.2
01A8:  GOTO   1AD
01A9:  MOVF   2B,W
01AA:  SUBWF  31,W
01AB:  BTFSC  03.0
01AC:  GOTO   1C3
....................          { 
....................             Portc=letras[i]; 
01AD:  MOVF   32,W
01AE:  MOVWF  23
01AF:  MOVF   31,W
01B0:  CALL   004
01B1:  MOVWF  21
01B2:  MOVWF  07
....................             delay_us(2500); 
01B3:  MOVLW  02
01B4:  MOVWF  33
01B5:  CALL   14E
01B6:  MOVLW  02
01B7:  MOVWF  33
01B8:  MOVLW  F8
01B9:  MOVWF  34
01BA:  CALL   161
01BB:  DECFSZ 33,F
01BC:  GOTO   1B8
....................             cl=1;cl=0; 
01BD:  BSF    06.6
01BE:  BCF    06.6
....................          } 
01BF:  INCF   31,F
01C0:  BTFSC  03.2
01C1:  INCF   32,F
01C2:  GOTO   1A3
....................       } 
01C3:  INCF   30,F
01C4:  GOTO   197
....................       inicio++;fin++; 
01C5:  INCF   29,F
01C6:  BTFSC  03.2
01C7:  INCF   2A,F
01C8:  INCF   2B,F
01C9:  BTFSC  03.2
01CA:  INCF   2C,F
....................    }while(fin<fin_msj); 
01CB:  MOVF   2C,W
01CC:  SUBWF  2E,W
01CD:  BTFSS  03.0
01CE:  GOTO   1D5
01CF:  BTFSS  03.2
01D0:  GOTO   196
01D1:  MOVF   2D,W
01D2:  SUBWF  2B,W
01D3:  BTFSS  03.0
01D4:  GOTO   196
.................... } 
01D5:  RETURN
.................... int comprobar_adc(long analog) 
.................... { 
....................    if(analog<=21845)return (1); 
01D6:  MOVF   2B,W
01D7:  SUBLW  55
01D8:  BTFSS  03.0
01D9:  GOTO   1E3
01DA:  BTFSS  03.2
01DB:  GOTO   1E0
01DC:  MOVF   2A,W
01DD:  SUBLW  55
01DE:  BTFSS  03.0
01DF:  GOTO   1E3
01E0:  MOVLW  01
01E1:  MOVWF  21
01E2:  GOTO   23F
....................    if(analog<=24924)return (3); 
01E3:  MOVF   2B,W
01E4:  SUBLW  61
01E5:  BTFSS  03.0
01E6:  GOTO   1F0
01E7:  BTFSS  03.2
01E8:  GOTO   1ED
01E9:  MOVF   2A,W
01EA:  SUBLW  5C
01EB:  BTFSS  03.0
01EC:  GOTO   1F0
01ED:  MOVLW  03
01EE:  MOVWF  21
01EF:  GOTO   23F
....................    if(analog<=28167)return (7); 
01F0:  MOVF   2B,W
01F1:  SUBLW  6E
01F2:  BTFSS  03.0
01F3:  GOTO   1FD
01F4:  BTFSS  03.2
01F5:  GOTO   1FA
01F6:  MOVF   2A,W
01F7:  SUBLW  07
01F8:  BTFSS  03.0
01F9:  GOTO   1FD
01FA:  MOVLW  07
01FB:  MOVWF  21
01FC:  GOTO   23F
....................    if(analog<=31626)return (15); 
01FD:  MOVF   2B,W
01FE:  SUBLW  7B
01FF:  BTFSS  03.0
0200:  GOTO   20A
0201:  BTFSS  03.2
0202:  GOTO   207
0203:  MOVF   2A,W
0204:  SUBLW  8A
0205:  BTFSS  03.0
0206:  GOTO   20A
0207:  MOVLW  0F
0208:  MOVWF  21
0209:  GOTO   23F
....................    if(analog<=35381)return (31); 
020A:  MOVF   2B,W
020B:  SUBLW  8A
020C:  BTFSS  03.0
020D:  GOTO   217
020E:  BTFSS  03.2
020F:  GOTO   214
0210:  MOVF   2A,W
0211:  SUBLW  35
0212:  BTFSS  03.0
0213:  GOTO   217
0214:  MOVLW  1F
0215:  MOVWF  21
0216:  GOTO   23F
....................    if(analog<=39569)return (63); 
0217:  MOVF   2B,W
0218:  SUBLW  9A
0219:  BTFSS  03.0
021A:  GOTO   224
021B:  BTFSS  03.2
021C:  GOTO   221
021D:  MOVF   2A,W
021E:  SUBLW  91
021F:  BTFSS  03.0
0220:  GOTO   224
0221:  MOVLW  3F
0222:  MOVWF  21
0223:  GOTO   23F
....................    if(analog<=44450)return (127); 
0224:  MOVF   2B,W
0225:  SUBLW  AD
0226:  BTFSS  03.0
0227:  GOTO   231
0228:  BTFSS  03.2
0229:  GOTO   22E
022A:  MOVF   2A,W
022B:  SUBLW  A2
022C:  BTFSS  03.0
022D:  GOTO   231
022E:  MOVLW  7F
022F:  MOVWF  21
0230:  GOTO   23F
....................    if(analog>=50706)return (255); 
0231:  MOVF   2B,W
0232:  SUBLW  C5
0233:  BTFSC  03.0
0234:  GOTO   23F
0235:  XORLW  FF
0236:  BTFSS  03.2
0237:  GOTO   23C
0238:  MOVF   2A,W
0239:  SUBLW  11
023A:  BTFSC  03.0
023B:  GOTO   23F
023C:  MOVLW  FF
023D:  MOVWF  21
023E:  GOTO   23F
.................... } 
023F:  GOTO   2B0 (RETURN)

Configuration Fuses:
   Word  1: 3CD4   INTRC_IO NOWDT NOPUT NOMCLR NOPROTECT NOCPD NOBROWNOUT IESO FCMEN
