CCS PCH C Compiler, Version 5.007, 59972               03-jul.-18 12:49

               Filename:   C:\Users\ivan-\Desktop\Ej1_lm35_pwm\ej1.lst

               ROM used:   546 bytes (2%)
                           Largest free fragment is 32218
               RAM used:   28 (1%) at main() level
                           30 (1%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 31

*
0000:  GOTO   0104
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  FF2.5
004A:  GOTO   0054
004E:  BTFSC  FF2.2
0050:  GOTO   0096
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
....................  
.................... #list 
....................  
.................... #device ADC=10 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES WDT128                   //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOXINST                  //Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
....................  
.................... #use delay(crystal=20000000) 
*
00DC:  CLRF   FEA
00DE:  MOVLW  1C
00E0:  MOVWF  FE9
00E2:  MOVF   FEF,W
00E4:  BZ    0100
00E6:  MOVLW  06
00E8:  MOVWF  01
00EA:  CLRF   00
00EC:  DECFSZ 00,F
00EE:  BRA    00EC
00F0:  DECFSZ 01,F
00F2:  BRA    00EA
00F4:  MOVLW  7B
00F6:  MOVWF  00
00F8:  DECFSZ 00,F
00FA:  BRA    00F8
00FC:  DECFSZ FEF,F
00FE:  BRA    00E6
0100:  GOTO   0222 (RETURN)
....................  
.................... char flag_50,flag_100; 
.................... int16 pwm_duty; 
....................  
.................... #INT_TIMER0 
.................... void  TIMER0_isr(void)  
.................... { 
....................    if(flag_100 && !flag_50){ 
*
0096:  MOVF   17,F
0098:  BZ    00A8
009A:  MOVF   16,F
009C:  BNZ   00A8
....................        pwm_duty = 997; 
009E:  MOVLW  03
00A0:  MOVWF  19
00A2:  MOVLW  E5
00A4:  MOVWF  18
....................    }else if (!flag_100 && flag_50){ 
00A6:  BRA    00D2
00A8:  MOVF   17,F
00AA:  BNZ   00D2
00AC:  MOVF   16,F
00AE:  BZ    00D2
....................        if(pwm_duty > 500) 
00B0:  MOVF   19,W
00B2:  SUBLW  00
00B4:  BC    00CA
00B6:  XORLW  FF
00B8:  BNZ   00C0
00BA:  MOVF   18,W
00BC:  SUBLW  F4
00BE:  BC    00CA
....................          pwm_duty -= 100; 
00C0:  MOVLW  64
00C2:  SUBWF  18,F
00C4:  MOVLW  00
00C6:  SUBWFB 19,F
00C8:  BRA    00D2
....................        else  
....................          pwm_duty = 500; 
00CA:  MOVLW  01
00CC:  MOVWF  19
00CE:  MOVLW  F4
00D0:  MOVWF  18
....................     } 
....................    flag_50 = 0; 
00D2:  CLRF   16
....................    flag_100 = 0; 
00D4:  CLRF   17
00D6:  BCF    FF2.2
00D8:  GOTO   0054
.................... } 
....................  
.................... void main(){ 
*
0104:  CLRF   FF8
0106:  BCF    FD0.7
0108:  BSF    07.7
010A:  MOVF   FC1,W
010C:  ANDLW  C0
010E:  IORLW  0F
0110:  MOVWF  FC1
0112:  MOVLW  07
0114:  MOVWF  FB4
....................    flag_50 = 0; 
0116:  CLRF   16
....................    flag_100 = 0; 
0118:  CLRF   17
....................    set_tris_b(0x00); 
011A:  MOVLW  00
011C:  MOVWF  F93
....................    setup_adc(ADC_CLOCK_DIV_64 | ADC_TAD_MUL_8 | VSS_VDD ); 
011E:  MOVF   FC0,W
0120:  ANDLW  C0
0122:  IORLW  26
0124:  MOVWF  FC0
0126:  BSF    FC0.7
0128:  BSF    FC2.0
....................    setup_adc_ports(AN0); 
012A:  MOVF   FC1,W
012C:  ANDLW  C0
012E:  IORLW  0E
0130:  MOVWF  FC1
....................    set_adc_channel(0); 
0132:  MOVLW  00
0134:  MOVWF  01
0136:  MOVF   FC2,W
0138:  ANDLW  C3
013A:  IORWF  01,W
013C:  MOVWF  FC2
....................     
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_64);      //840 ms overflow 
013E:  MOVLW  85
0140:  MOVWF  FD5
....................    setup_timer_2(T2_DIV_BY_1,249,1);      //50.0 us overflow, 50.0 us interrupt 
0142:  MOVLW  00
0144:  IORLW  04
0146:  MOVWF  FCA
0148:  MOVLW  F9
014A:  MOVWF  FCB
....................  
....................    setup_ccp1(CCP_PWM|CCP_SHUTDOWN_AC_L|CCP_SHUTDOWN_BD_L); 
014C:  BCF    F94.2
014E:  BCF    F8B.2
0150:  MOVLW  0C
0152:  MOVWF  FBD
0154:  CLRF   FB7
0156:  CLRF   FB6
....................    set_pwm1_duty((int16)997); 
0158:  MOVLW  F9
015A:  MOVWF  FBE
015C:  MOVF   FBD,W
015E:  ANDLW  CF
0160:  IORLW  10
0162:  MOVWF  FBD
....................  
....................    enable_interrupts(INT_TIMER0); 
0164:  BSF    FF2.5
....................    enable_interrupts(GLOBAL); 
0166:  MOVLW  C0
0168:  IORWF  FF2,F
....................  
....................    long temp; 
....................    while(TRUE){ 
....................       temp = read_adc() >>1; 
016A:  BSF    FC2.1
016C:  BTFSC  FC2.1
016E:  BRA    016C
0170:  BCF    FD8.0
0172:  RRCF   FC4,W
0174:  MOVWF  1B
0176:  RRCF   FC3,W
0178:  MOVWF  1A
....................       //output_b(temp & 0xFF); 
....................       if(temp > 0 && temp <=25){output_b(0x01);pwm_duty = 0;} 
017A:  MOVF   1A,F
017C:  BNZ   0182
017E:  MOVF   1B,F
0180:  BZ    0198
0182:  MOVF   1B,F
0184:  BNZ   0198
0186:  MOVF   1A,W
0188:  SUBLW  19
018A:  BNC   0198
018C:  CLRF   F93
018E:  MOVLW  01
0190:  MOVWF  F8A
0192:  CLRF   19
0194:  CLRF   18
0196:  BRA    01F6
....................       else if(temp > 25 && temp <=28){output_b(0x02);pwm_duty = 0;} 
0198:  MOVF   1B,F
019A:  BNZ   01A2
019C:  MOVF   1A,W
019E:  SUBLW  19
01A0:  BC    01B8
01A2:  MOVF   1B,F
01A4:  BNZ   01B8
01A6:  MOVF   1A,W
01A8:  SUBLW  1C
01AA:  BNC   01B8
01AC:  CLRF   F93
01AE:  MOVLW  02
01B0:  MOVWF  F8A
01B2:  CLRF   19
01B4:  CLRF   18
01B6:  BRA    01F6
....................       else if(temp > 28 && temp <=45){output_b(0x04);flag_50 = 1;} 
01B8:  MOVF   1B,F
01BA:  BNZ   01C2
01BC:  MOVF   1A,W
01BE:  SUBLW  1C
01C0:  BC    01D8
01C2:  MOVF   1B,F
01C4:  BNZ   01D8
01C6:  MOVF   1A,W
01C8:  SUBLW  2D
01CA:  BNC   01D8
01CC:  CLRF   F93
01CE:  MOVLW  04
01D0:  MOVWF  F8A
01D2:  MOVLW  01
01D4:  MOVWF  16
01D6:  BRA    01F6
....................       else if(temp > 45 && temp <=100){output_b(0x08);flag_100 = 1;} 
01D8:  MOVF   1B,F
01DA:  BNZ   01E2
01DC:  MOVF   1A,W
01DE:  SUBLW  2D
01E0:  BC    01F6
01E2:  MOVF   1B,F
01E4:  BNZ   01F6
01E6:  MOVF   1A,W
01E8:  SUBLW  64
01EA:  BNC   01F6
01EC:  CLRF   F93
01EE:  MOVLW  08
01F0:  MOVWF  F8A
01F2:  MOVLW  01
01F4:  MOVWF  17
....................       set_pwm1_duty(pwm_duty); 
01F6:  MOVFF  19,02
01FA:  MOVFF  18,01
01FE:  RRCF   02,F
0200:  RRCF   01,F
0202:  RRCF   02,F
0204:  RRCF   01,F
0206:  RRCF   02,F
0208:  MOVFF  01,FBE
020C:  RRCF   02,F
020E:  RRCF   02,W
0210:  ANDLW  30
0212:  MOVWF  00
0214:  MOVF   FBD,W
0216:  ANDLW  CF
0218:  IORWF  00,W
021A:  MOVWF  FBD
....................       delay_ms(100); 
021C:  MOVLW  64
021E:  MOVWF  1C
0220:  BRA    00DC
0222:  BRA    016A
....................    } 
....................  
.................... } 
0224:  SLEEP 

Configuration Fuses:
   Word  1: CC04   PLL5 CPUDIV1 NOUSBDIV HS FCMEN IESO
   Word  2: 0E38   PUT NOBROWNOUT BORV21 VREGEN NOWDT WDT128
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
