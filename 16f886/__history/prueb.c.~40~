#include <16f886.h>
#fuses HS
#fuses MCLR
#fuses NOWDT
#fuses NOPUT
#fuses NOLVP
#fuses NOPROTECT
#fuses NOCPD
#fuses NOBROWNOUT
#fuses FCMEN
#fuses IESO

#use delay(clock=20M)

#BYTE TRISA=0x85
#BYTE TRISB=0x86
#BYTE TRISC=0x87
#BYTE PORTA=0x05
#BYTE PORTB=0x06
#BYTE PORTC=0x07
//Funciones
int separar(int pos,long n);
//Variables generales
   short modo=1;
   int a,numero[4],num1,p,inicio=0,fin=8,t=8;
   long num=0;
//Cadenas de constantes
   int const sec[10]=
   {
      0b00000011,0b10011111,0b00100101,0b00001101,0b10011001,
      0b01001001,0b01000001,0b00011111,0b00000001,0b00011001
   };
   int const mtz[]=
   {
      0     ,0    ,0    ,0    ,0    ,0,//Espacio
      255   ,8    ,8    ,8    ,255  ,0,//H
      126   ,129  ,129  ,129  ,126  ,0,//O
      255   ,1    ,1    ,1    ,1    ,0,//L
      127   ,136  ,136  ,136  ,127  ,0,//A
      0     ,0    ,0    ,0    ,0    ,0,//Espacio
      255   ,64   ,32   ,64   ,255  ,0,//M
      254   ,1    ,1    ,1    ,254  ,0,//U
      255   ,16   ,8    ,4    ,255  ,0,//N
      255   ,129  ,129  ,129  ,126  ,0,//D
      126   ,129  ,129  ,129  ,126  ,0,//O
      0     ,0    ,253  ,253  ,0    ,0,//!
      0     ,0    ,0    ,0    ,0,0,0,0,//Espacio
   };//Total =80
   long const rom[0x1000]={
      0x3001,0x8A,0x2912,0x00,0x100A,0x108A,0x110A,0x782,0x3403,0x349F,0x3425,0x340D,0x3499,0x3449,0x3441,0x341F,
      0x3401,0x3419,0x100A,0x108A,0x110A,0x782,0x3400,0x3400,0x3400,0x3400,0x3400,0x3400,0x34FF,0x3408,0x3408,0x3408,
      0x34FF,0x3400,0x347E,0x3481,0x3481,0x3481,0x347E,0x3400,0x34FF,0x3401,0x3401,0x3401,0x3401,0x3400,0x347F,0x3488,
      0x3488,0x3488,0x347F,0x3400,0x3400,0x3400,0x3400,0x3400,0x3400,0x3400,0x34FF,0x3440,0x3420,0x3440,0x34FF,0x3400,
      0x34FE,0x3401,0x3401,0x3401,0x34FE,0x3400,0x34FF,0x3410,0x3408,0x3404,0x34FF,0x3400,0x34FF,0x3481,0x3481,0x3481,
      0x347E,0x3400,0x347E,0x3481,0x3481,0x3481,0x347E,0x3400,0x3400,0x3400,0x34FD,0x34FD,0x3400,0x3400,0x3400,0x3400,
      0x3400,0x3400,0x3400,0x3400,0x3400,0x3400,0x302D,0x84,0x1383,0x800,0x1903,0x2879,0x3006,0xF8,0x1F7,0xBF7,
      0x286F,0xBF8,0x286E,0x307B,0xF7,0xBF7,0x2875,0xB80,0x286C,0x08,0x3003,0x2AE,0x1C03,0x2888,0x302E,0x84,
      0x1383,0x800,0x1903,0x2888,0x2886,0x2886,0xB80,0x2885,0x118A,0x120A,0x2952,0x1F8,0x1F9,0x1F7,0x1FA,0x837,
      0x1D03,0x2895,0x836,0x1903,0x28AF,0x3010,0xB8,0x1003,0xDB4,0xDB5,0xDF7,0xDFA,0x837,0x27A,0x1D03,0x28A2,
      0x836,0x277,0x1C03,0x28AB,0x836,0x2F7,0x1C03,0x3FA,0x837,0x2FA,0x1403,0xDF8,0xDF9,0xBB8,0x2897,0x08,
      0x82F,0x3EFC,0x1803,0x2907,0x3E04,0x290A,0x831,0xB5,0x830,0xB4,0x1B7,0x300A,0xB6,0x208B,0x877,0xF8,
      0x2907,0x2907,0x831,0xB5,0x830,0xB4,0x3003,0xB7,0x30E8,0xB6,0x208B,0x877,0xB2,0x87A,0xB3,0xB5,
      0x832,0xB4,0x1B7,0x3064,0xB6,0x208B,0x877,0xB2,0x87A,0xB3,0xB5,0x832,0xB4,0x1B7,0x300A,0xB6,
      0x208B,0x878,0x2907,0x2907,0x831,0xB5,0x830,0xB4,0x3003,0xB7,0x30E8,0xB6,0x208B,0x877,0xB2,0x87A,
      0xB3,0xB5,0x832,0xB4,0x1B7,0x3064,0xB6,0x208B,0x878,0x2907,0x2907,0x831,0xB5,0x830,0xB4,0x3003,
      0xB7,0x30E8,0xB6,0x208B,0x878,0x2907,0x2907,0x118A,0x120A,0x2993,0x140A,0x108A,0x110A,0x782,0x28B6,0x28C2,
      0x28E4,0x28FB,0x184,0x1383,0x301F,0x583,0x1420,0x1A8,0x3008,0xA9,0xAA,0x1AC,0x1AB,0x1683,0x1703,0x809,
      0x39C0,0x89,0x1303,0x121F,0x129F,0x3000,0x1703,0x88,0x1283,0x187,0x188,0x189,0x1683,0x1303,0x186,0x187,
      0x30F0,0x85,0x30FF,0x1283,0x87,0x85,0x186,0x1C20,0x297B,0x1A1,0x82A,0x221,0x1803,0x2965,0x3001,0x86,
      0x828,0xA7,0x829,0x227,0x1803,0x2958,0x827,0x2012,0xF8,0x87,0x3002,0xAD,0x2066,0x3003,0xAD,0x30F9,
      0xAE,0x287A,0xBAD,0x294F,0x1003,0xD86,0xAA7,0x2942,0x1683,0x1605,0x1283,0x1A05,0x2963,0x1020,0x186,0x30C8,
      0xAD,0x2066,0x2965,0xAA1,0x293A,0x1683,0x1685,0x1283,0x1A85,0x2971,0xAAA,0x82A,0x3C14,0x1803,0x2971,0x3001,
      0xAA,0xAA8,0xAA9,0x829,0x3C4F,0x1803,0x297A,0x1A8,0x3008,0xA9,0x2937,0x1820,0x29F5,0x1A1,0x821,0x3C03,
      0x1C03,0x299C,0x3022,0x721,0xF8,0x1FA,0x1803,0xAFA,0x878,0xAD,0x87A,0xAE,0x821,0xAF,0x82C,0xB1,
      0x82B,0xB0,0x28B0,0x82D,0x84,0x1383,0x182E,0x1783,0x878,0x80,0xAA1,0x297E,0x1A6,0x826,0x3C0E,0x1C03,
      0x29D8,0x1A1,0x821,0x3C03,0x1C03,0x29C5,0x821,0x3EFC,0x1803,0x29B8,0x3E04,0x29F7,0x300E,0x85,0x29B8,0x300D,
      0x85,0x29B8,0x300B,0x85,0x29B8,0x3007,0x85,0x29B8,0x3022,0x721,0x84,0x1383,0x800,0x2004,0xF8,0x87,
      0x3004,0xAD,0x2066,0xAA1,0x29A2,0x1683,0x1605,0x1283,0x1E05,0x29D8,0x1683,0x1685,0x1283,0x1A85,0x29D6,0x1420,
      0x300F,0x85,0x3096,0xAD,0x2066,0x29D8,0xAA6,0x299D,0x1820,0x29E7,0xAAB,0x1903,0xAAC,0x82C,0x3C27,0x1C03,
      0x29E7,0x1D03,0x297D,0x82B,0x3C0F,0x1803,0x297D,0x82C,0x3C26,0x1803,0x29F4,0x3AFF,0x1D03,0x29F2,0x82B,0x3C10,
      0x1803,0x29F4,0x1AC,0x1AB,0x297B,0x2937,0x63,0x140A,0x108A,0x110A,0x782,0x29AC,0x29AF,0x29B2,0x29B5};
//Programa principal
void main()
{
   Trisb=0;
   Trisc=0;
   trisa=0b11110000;
   Portc=255;
   Porta=255;
   Portb=0;
   do
   {
      while(modo)
      {
         for(a=0;a<t;a++)
         {
            Portb=1;
            for(p=inicio;p<fin;p++)
            {
               Portc=mtz[p];
               delay_us(2750);
               portb<<=1;
            }
            if(input(pin_a4)==0)
            {
               modo=false;
               portb=0;
               delay_ms(200);
               break;
            }
         }
         if(input(pin_a5)==0)
            {
               t++;
               if(t>20)
                  t=1;
            }
         inicio++;
         fin++;
         if(fin>=80)
         {inicio=0;fin=8;}
      }
      while(!modo)
      {  
         do
         {
            for(a=0;a<4;a++)
            {numero[a]=separar(a,num);}
            for(num1=0;num1<15;num1++)
            {
               for(a=0;a<4;a++)
               {
                  switch(a)
                  {
                     case 0:porta=0b1110;break;
                     case 1:porta=0b1101;break;
                     case 2:porta=0b1011;break;
                     case 3:porta=0b0111;break;
                  }
                  portc=sec[numero[a]];
                  delay_ms(4);
               }
               if(input(pin_a4)==0){break;}
               if(input(pin_a5)==0)
               {
                  modo=true;
                  Porta=0b1111;
                  delay_ms(150);
                  break;
               }
            }
            if(modo==true){break;}
            num++;
         }while(num<10000);
         if(num>10000)num=0;
      }
   }while(true);
}
int separar(int pos,long n)
{
   switch(pos)
   {
      case 0:return (n%10);break;
      case 1:return (((n%1000)%100)/10);break;
      case 2:return ((n%1000)/100);break;
      case 3:return (n/1000);break;
   }
}
