CCS PCM C Compiler, Version 4.130, 59972               19-dic.-15 18:49

               Filename: C:\Users\ivan-\Documents\MEGA\Electronica\Microcontroladores\PIC\Pic C\16f886\vumetro matriz 886\vumetro matriz.lst

               ROM used: 595 words (7%)
                         Largest free fragment is 2048
               RAM used: 6 (2%) at main() level
                         18 (5%) worst case
               Stack:    2 locations

*
0000:  MOVLW  02
0001:  MOVWF  0A
0002:  GOTO   217
0003:  NOP
.................... #include <16f886.h> 
.................... //////// Standard Header file for the PIC16F886 device //////////////// 
.................... #device PIC16F886 
.................... #list 
....................  
.................... #device adc=10 
....................  
.................... #FUSES NOWDT,INTRC_IO,MCLR,NOBROWNOUT,NOPUT,NOPROTECT,NOCPD,IESO,FCMEN 
.................... #use delay(clock=8M) 
*
01D3:  MOVLW  2B
01D4:  MOVWF  04
01D5:  BCF    03.7
01D6:  MOVF   00,W
01D7:  BTFSC  03.2
01D8:  GOTO   1E6
01D9:  MOVLW  02
01DA:  MOVWF  78
01DB:  CLRF   77
01DC:  DECFSZ 77,F
01DD:  GOTO   1DC
01DE:  DECFSZ 78,F
01DF:  GOTO   1DB
01E0:  MOVLW  97
01E1:  MOVWF  77
01E2:  DECFSZ 77,F
01E3:  GOTO   1E2
01E4:  DECFSZ 00,F
01E5:  GOTO   1D9
*
01EA:  MOVLW  08
01EB:  SUBWF  2C,F
01EC:  BTFSS  03.0
01ED:  GOTO   1FA
01EE:  MOVLW  2C
01EF:  MOVWF  04
01F0:  BCF    03.7
01F1:  BCF    03.0
01F2:  RRF    00,F
01F3:  MOVF   00,W
01F4:  BTFSC  03.2
01F5:  GOTO   1FA
01F6:  GOTO   1F8
01F7:  NOP
01F8:  DECFSZ 00,F
01F9:  GOTO   1F7
....................  
.................... #BYTE TRISA=0x85 
.................... #BYTE TRISB=0x86 
.................... #BYTE TRISC=0x87 
.................... #BYTE PORTA=0x05 
.................... #BYTE PORTB=0x06 
.................... #BYTE PORTC=0x07 
....................  
.................... void anuncio(int letrero); 
.................... int comprobar_adc(long analog); 
.................... //Programa pricipal 
.................... void main() 
.................... { 
*
0217:  CLRF   04
0218:  BCF    03.7
0219:  MOVLW  1F
021A:  ANDWF  03,F
021B:  MOVLW  71
021C:  BSF    03.5
021D:  MOVWF  0F
021E:  MOVF   0F,W
021F:  BSF    03.6
0220:  MOVF   09,W
0221:  ANDLW  C0
0222:  MOVWF  09
0223:  BCF    03.6
0224:  BCF    1F.4
0225:  BCF    1F.5
0226:  MOVLW  00
0227:  BSF    03.6
0228:  MOVWF  08
0229:  BCF    03.5
022A:  CLRF   07
022B:  CLRF   08
022C:  CLRF   09
....................    Trisc=0;Portc=0; 
022D:  BSF    03.5
022E:  BCF    03.6
022F:  CLRF   07
0230:  BCF    03.5
0231:  CLRF   07
....................    Trisb=0;Portb=0; 
0232:  BSF    03.5
0233:  CLRF   06
0234:  BCF    03.5
0235:  CLRF   06
....................    Trisa=0xFF; 
0236:  MOVLW  FF
0237:  BSF    03.5
0238:  MOVWF  05
....................    setup_oscillator(OSC_8MHZ); 
0239:  MOVLW  71
023A:  MOVWF  0F
023B:  MOVF   0F,W
....................    setup_adc_ports(sAN0 | sAN1 | VSS_VREF); 
023C:  BSF    03.6
023D:  MOVF   09,W
023E:  ANDLW  C0
023F:  MOVWF  09
0240:  BCF    03.6
0241:  BSF    1F.4
0242:  BCF    1F.5
0243:  MOVLW  03
0244:  BSF    03.6
0245:  MOVWF  08
....................    setup_adc(ADC_CLOCK_INTERNAL); 
0246:  BCF    03.5
0247:  BCF    03.6
0248:  BSF    1F.6
0249:  BSF    1F.7
024A:  BSF    03.5
024B:  BSF    1F.7
024C:  BCF    03.5
024D:  BSF    1F.0
....................    while(true) 
....................    { 
....................       anuncio(1);    
024E:  MOVLW  01
024F:  MOVWF  21
0250:  GOTO   187
....................    } 
0251:  GOTO   24E
....................    //anuncio(1); 
....................    //short f_mod=false; 
....................    //int modo=2; 
....................    /*while(true) 
....................    { 
....................       set_adc_channel(modo-1); 
....................       delay_us(15); 
....................       if(!f_mod) 
....................       {    
....................          anuncio(modo+1); 
....................          f_mod=true; 
....................       } 
....................       portb=1; 
....................       for(int j=0;j<8;++j) 
....................       { 
....................          Portc=comprobar_adc(read_adc()); 
....................          delay_us(2250); 
....................          portb<<=1; 
....................          if(!input(PIN_A5)) 
....................          { 
....................             if(modo==1) 
....................                modo=2; 
....................             else 
....................                modo=1; 
....................             f_mod=false; 
....................             delay_ms(200); 
....................             break; 
....................          } 
....................       } 
....................    }*/ 
.................... } 
.................... void anuncio(int letrero) 
.................... { 
0252:  SLEEP
....................    const int abcd[]= 
.................... { 
....................    /* 0*/   62 ,  69 ,  73 ,  81 ,  62 ,  0  , 
....................    /* 1*/   17 ,  33 ,  127   ,  1  ,  1  ,  0  , 
....................    /* 2*/   33 ,  67 ,  69 ,  73 ,  49 ,  0  , 
....................    /* 3*/   34 ,  65 ,  73 ,  73 ,  54 ,  0  , 
....................    /* 4*/   12 ,  20 ,  36 ,  127   ,  4  ,  0  , 
....................    /* 5*/   114   ,  81 ,  81 ,  81 ,  78 ,  0  , 
....................    /* 6*/   62 ,  73 ,  73 ,  73 ,  38 ,  0  , 
....................    /* 7*/   64 ,  71 ,  72 ,  80 ,  96 ,  0  , 
....................    /* 8*/   54 ,  73 ,  73 ,  73 ,  54 ,  0  , 
....................    /* 9*/   50 ,  73 ,  73 ,  73 ,  62 ,  0  , 
....................    //10 elementos de 0 a 59 
....................    /* A*/   31 ,  36 ,  68 ,  68 ,  127   ,  0  , 
....................    /* B*/   127   ,  73 ,  73 ,  73 ,  54 ,  0  , 
....................    /* C*/   62 ,  65 ,  65 ,  65 ,  34 ,  0  , 
....................    /* D*/   127   ,  65 ,  65 ,  65 ,  62 ,  0  , 
....................    /* E*/   127   ,  73 ,  73 ,  73 ,  65 ,  0  , 
....................    /* F*/   127   ,  72 ,  72 ,  72 ,  64 ,  0  , 
....................    /* G*/   62 ,  65 ,  65 ,  69 ,  38 ,  0  , 
....................    /* H*/   127   ,  8  ,  8  ,  8  ,  127   ,  0  , 
....................    /* I*/   0  ,  65 ,  127   ,  65 ,  0  ,  0  , 
....................    /* J*/   0  ,  2  ,  65 ,  65 ,  126   ,  0  , 
....................    /* K*/   127   ,  8  ,  20 ,  34 ,  65 ,  0  , 
....................    /* L*/   127   ,  1  ,  1  ,  1  ,  1  ,  0  , 
....................    /* M*/   127   ,  32 ,  24 ,  32 ,  127   ,  0  , 
....................    /* N*/   127   ,  16 ,  8  ,  4  ,  127   ,  0  , 
....................    /* O*/   62 ,  65 ,  65 ,  65 ,  62 ,  0  , 
....................    /* P*/   127   ,  72 ,  72 ,  72 ,  48 ,  0  , 
....................    /* Q*/   60 ,  66 ,  66 ,  66 ,  61 ,  0  , 
....................    /* R*/   127   ,  72 ,  76 ,  74 ,  49 ,  0  , 
....................    /* S*/   50 ,  73 ,  73 ,  73 ,  38 ,  0  , 
....................    /* T*/   64 ,  64 ,  127   ,  64 ,  64 ,  0  , 
....................    /* U*/   126   ,  1  ,  1  ,  1  ,  126   ,  0  , 
....................    /* V*/   124   ,  2  ,  1  ,  2  ,  124   ,  0  , 
....................    /* W*/   126   ,  1  ,  6  ,  1  ,  126   ,  0  , 
....................    /* X*/   99 ,  20 ,  8  ,  20 ,  99 ,  0  , 
....................    /* Y*/   114   ,  9  ,  9  ,  9  ,  126   ,  0  , 
....................    /* Z*/   67 ,  69 ,  73 ,  81 ,  97 ,  0  , 
....................    //26 elementos de 60 a 215 
....................    /* a*/   6  ,  21 ,  21 ,  21 ,  15 ,  0  , 
....................    /* b*/   63 ,  9  ,  9  ,  9  ,  6  ,  0  , 
....................    /* c*/   14 ,  17 ,  17 ,  17 ,  9  ,  0  , 
....................    /* d*/   6  ,  9  ,  9  ,  9  ,  63 ,  0  , 
....................    /* e*/   14 ,  21 ,  21 ,  21 ,  13 ,  0  , 
....................    /* f*/   8  ,  31 ,  40 ,  40 ,  0  ,  0  , 
....................    /* g*/   25 ,  37 ,  37 ,  37 ,  62 ,  0  , 
....................    /* h*/   63 ,  8  ,  8  ,  8  ,  7  ,  0  , 
....................    /* i*/   0  ,  9  ,  47 ,  1  ,  0  ,  0  , 
....................    /* j*/   2  ,  1  ,  1  ,  1  ,  94 ,  0  , 
....................    /* k*/   63 ,  4  ,  10 ,  17 ,  0  ,  0  , 
....................    /* l*/   62 ,  1  ,  1  ,  1  ,  0  ,  0  , 
....................    /* m*/   31 ,  16 ,  15 ,  16 ,  31 ,  0  , 
....................    /* n*/   31 ,  16 ,  16 ,  15 ,  0  ,  0  , 
....................    /* o*/   14 ,  17 ,  17 ,  17 ,  14 ,  0  , 
....................    /* p*/   63 ,  36 ,  36 ,  36 ,  24 ,  0  , 
....................    /* q*/   24 ,  36 ,  36 ,  36 ,  63 ,  0  , 
....................    /* r*/   0  ,  15 ,  16 ,  16 ,  0  ,  0  , 
....................    /* s*/   9  ,  21 ,  21 ,  21 ,  18 ,  0  , 
....................    /* t*/   16 ,  16 ,  62 ,  17 ,  17 ,  0  , 
....................    /* u*/   30 ,  1  ,  1  ,  2  ,  31 ,  0  , 
....................    /* v*/   0  ,  30 ,  1  ,  1  ,  30 ,  0  , 
....................    /* w*/   30 ,  1  ,  14 ,  1  ,  30 ,  0  , 
....................    /* x*/   17 ,  10 ,  4  ,  10 ,  17 ,  0  , 
....................    /* y*/   57 ,  5  ,  5  ,  5  ,  62 ,  0  , 
....................    /* z*/   17 ,  19 ,  21 ,  25 ,  17 ,  0  , 
....................    //26 elementos de 216 a 371 
....................    /*  */  0   ,  0  ,  0  ,  0  ,  0  ,  0  , 
....................    //1 elemento de 272 a 377  
.................... }; 
....................    const int letras[]={ 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /*C*/ 126   ,  255   ,  195   ,  195   ,  195   ,  195   ,  231   ,  102   ,  0  , 
....................    /*E*/   255   ,   255   ,   219   ,   219   ,   219   ,   219   ,   195   ,   195   ,   0   , 
....................    /*C*/ 126   ,  255   ,  195   ,  195   ,  195   ,  195   ,  231   ,  102   ,  0  , 
....................    /*Y*/ 224   ,  112   ,  48 ,  63 ,  63 ,  48 ,  112   ,  224   ,  0  , 
....................    /*T*/ 192   ,  192   ,  192   ,  255   ,  255   ,  192   ,  192   ,  192   ,  0  , 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /*3*/ 0  ,  66 ,  219   ,  219   ,  219   ,  219   ,  255   ,  102   ,  0  , 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /*I*/ 195   ,  195   ,  195   ,  255   ,  255   ,  195   ,  195   ,  195   ,  0  , 
....................    /*P*/   255   ,   255   ,   204   ,   204   ,   204   ,   204   ,   252   ,   120   ,   0   , 
....................    /*N*/ 255   ,  255   ,  96 ,  48 ,  24 ,  12 ,  255   ,  255   ,  0  , 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /*S*/   114   ,   251   ,   219   ,   219   ,   219   ,   219   ,   223   ,   78   ,   0   , 
....................    /*C*/ 126   ,  255   ,  195   ,  195   ,  195   ,  195   ,  231   ,  102   ,  0  , 
....................    /*E*/   255   ,   255   ,   219   ,   219   ,   219   ,   219   ,   195   ,   195   ,   0   , 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /*6*/   126   ,   255   ,   219   ,   219   ,   219   ,   219   ,   219   ,   78   ,   0   , 
....................    /*I*/ 195   ,  195   ,  195   ,  255   ,  255   ,  195   ,  195   ,  195   ,  0  , 
....................    /*M*/ 255   ,  255   ,  96 ,  56 ,  56 ,  96 ,  255   ,  255   ,  0  , 
....................    /*3*/ 0  ,  66 ,  219   ,  219   ,  219   ,  219   ,  255   ,  102   ,  0  , 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /*I*/ 195   ,  195   ,  195   ,  255   ,  255   ,  195   ,  195   ,  195   ,  0  , 
....................    /*V*/ 252   ,  254   ,  3  ,  3  ,  3  ,  3  ,  254   ,  252   ,  0  , 
....................    /*A*/   127   ,   255   ,   204   ,   204   ,   204   ,   204   ,   255   ,   127   ,   0   , 
....................    /*N*/ 255   ,  255   ,  96 ,  48 ,  24 ,  12 ,  255   ,  255   ,  0  , 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /*M*/ 255   ,  255   ,  96 ,  56 ,  56 ,  96 ,  255   ,  255   ,  0  , 
....................    /*O*/ 126   ,  255   ,  195   ,  195   ,  195   ,  195   ,  255   ,  126   ,  0  , 
....................    /*R*/   255   ,   255   ,   216   ,   220   ,   222   ,   219   ,   249   ,   112   ,   0   , 
....................    /*E*/   255   ,   255   ,   219   ,   219   ,   219   ,   219   ,   195   ,   195   ,   0   , 
....................    /*N*/ 255   ,  255   ,  96 ,  48 ,  24 ,  12 ,  255   ,  255   ,  0  , 
....................    /*O*/ 126   ,  255   ,  195   ,  195   ,  195   ,  195   ,  255   ,  126   ,  0  ,    
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    //Mensaje 1 de 0 a 266 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /*M*/ 255   ,  255   ,  96 ,  56 ,  56 ,  96 ,  255   ,  255   ,  0  , 
....................    /*O*/ 126   ,  255   ,  195   ,  195   ,  195   ,  195   ,  255   ,  126   ,  0  , 
....................    /*D*/ 255   ,  255   ,  195   ,  195   ,  195   ,  195   ,  126   ,  60 ,  0  , 
....................    /*O*/ 126   ,  255   ,  195   ,  195   ,  195   ,  195   ,  255   ,  126   ,  0  , 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /*1*/ 3  ,  51 ,  99 ,  255   ,  127   ,  3  ,  3  ,  3  ,  0  , 
....................    //Mensaje 2 de 267 a 321 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /*M*/ 255   ,  255   ,  96 ,  56 ,  56 ,  96 ,  255   ,  255   ,  0  , 
....................    /*O*/ 126   ,  255   ,  195   ,  195   ,  195   ,  195   ,  255   ,  126   ,  0  , 
....................    /*D*/ 255   ,  255   ,  195   ,  195   ,  195   ,  195   ,  126   ,  60 ,  0  , 
....................    /*O*/ 126   ,  255   ,  195   ,  195   ,  195   ,  195   ,  255   ,  126   ,  0  , 
....................    /* */ 0,0,0,//////////////////////////////////////////////////////////////////////3 
....................    /*2*/ 49 ,  115   ,  71 ,  207   ,  219   ,  243   ,  227   ,  67 ,  0  , 
....................    //Mensaje 3 de 322 a 376 
....................    };    
....................    long inicio,fin,fin_msj; 
....................    switch(letrero) 
....................    { 
*
0187:  MOVF   21,W
0188:  XORLW  01
0189:  BTFSC  03.2
018A:  GOTO   192
018B:  XORLW  03
018C:  BTFSC  03.2
018D:  GOTO   199
018E:  XORLW  01
018F:  BTFSC  03.2
0190:  GOTO   1A2
0191:  GOTO   1AB
....................       case 1:inicio=0;fin_msj=266; 
0192:  CLRF   23
0193:  CLRF   22
0194:  MOVLW  01
0195:  MOVWF  27
0196:  MOVLW  0A
0197:  MOVWF  26
....................       break; 
0198:  GOTO   1AB
....................       case 2:inicio=267;fin_msj=321; 
0199:  MOVLW  01
019A:  MOVWF  23
019B:  MOVLW  0B
019C:  MOVWF  22
019D:  MOVLW  01
019E:  MOVWF  27
019F:  MOVLW  41
01A0:  MOVWF  26
....................       break; 
01A1:  GOTO   1AB
....................       case 3:inicio=322;fin_msj=376; 
01A2:  MOVLW  01
01A3:  MOVWF  23
01A4:  MOVLW  42
01A5:  MOVWF  22
01A6:  MOVLW  01
01A7:  MOVWF  27
01A8:  MOVLW  78
01A9:  MOVWF  26
....................       break; 
01AA:  GOTO   1AB
....................    } 
....................    fin=inicio+8; 
01AB:  MOVLW  08
01AC:  ADDWF  22,W
01AD:  MOVWF  24
01AE:  MOVF   23,W
01AF:  MOVWF  25
01B0:  BTFSC  03.0
01B1:  INCF   25,F
....................    fin_msj=377; 
01B2:  MOVLW  01
01B3:  MOVWF  27
01B4:  MOVLW  79
01B5:  MOVWF  26
....................    do 
....................    { 
....................       for (int j = 0; j < 12; ++j) 
01B6:  CLRF   28
01B7:  MOVF   28,W
01B8:  SUBLW  0B
01B9:  BTFSS  03.0
01BA:  GOTO   204
....................       { 
....................          Portb=1; 
01BB:  MOVLW  01
01BC:  MOVWF  06
....................          for (long i = inicio; i < fin; ++i) 
01BD:  MOVF   23,W
01BE:  MOVWF  2A
01BF:  MOVF   22,W
01C0:  MOVWF  29
01C1:  MOVF   2A,W
01C2:  SUBWF  25,W
01C3:  BTFSS  03.0
01C4:  GOTO   202
01C5:  BTFSS  03.2
01C6:  GOTO   1CB
01C7:  MOVF   24,W
01C8:  SUBWF  29,W
01C9:  BTFSC  03.0
01CA:  GOTO   202
....................          { 
....................             //Portc=letras[i]; 
....................             Portc=abcd[i]; 
01CB:  MOVF   2A,W
01CC:  MOVWF  7A
01CD:  MOVF   29,W
01CE:  CALL   004
01CF:  MOVWF  78
01D0:  MOVWF  07
....................             delay_us(2300); 
01D1:  MOVLW  02
01D2:  MOVWF  2B
*
01E6:  MOVLW  02
01E7:  MOVWF  2B
01E8:  MOVLW  94
01E9:  MOVWF  2C
*
01FA:  DECFSZ 2B,F
01FB:  GOTO   1E8
....................             Portb<<=1; 
01FC:  BCF    03.0
01FD:  RLF    06,F
....................          } 
01FE:  INCF   29,F
01FF:  BTFSC  03.2
0200:  INCF   2A,F
0201:  GOTO   1C1
....................       } 
0202:  INCF   28,F
0203:  GOTO   1B7
....................       inicio++;fin++; 
0204:  INCF   22,F
0205:  BTFSC  03.2
0206:  INCF   23,F
0207:  INCF   24,F
0208:  BTFSC  03.2
0209:  INCF   25,F
....................    }while(fin<=fin_msj); 
020A:  MOVF   25,W
020B:  SUBWF  27,W
020C:  BTFSS  03.0
020D:  GOTO   214
020E:  BTFSS  03.2
020F:  GOTO   1B6
0210:  MOVF   24,W
0211:  SUBWF  26,W
0212:  BTFSC  03.0
0213:  GOTO   1B6
.................... } 
0214:  BCF    0A.3
0215:  BCF    0A.4
0216:  GOTO   251 (RETURN)
.................... int comprobar_adc(long analog) 
.................... { 
....................    int valor=1; 
....................    if(analog<=114) valor=0; 
....................    else if(analog<=277) valor=1; 
....................    else if(analog<=341) valor=3; 
....................    else if(analog<=455) valor=7; 
....................    else if(analog<=568) valor=15; 
....................    else if(analog<=682) valor=31; 
....................    else if(analog<=796) valor=63; 
....................    else if(analog<=910) valor=127; 
....................    else if(analog>910) valor=255; 
....................    return valor; 
.................... } 

Configuration Fuses:
   Word  1: 2CF4   INTRC_IO NOWDT NOPUT MCLR NOPROTECT NOCPD NOBROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
